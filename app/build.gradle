apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--all', '--count'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}

android {
    Properties customProps = new Properties()
    customProps.load(new FileInputStream("../secrets/zmuzik.taibike.properties"))

    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "zmuzik.taibike"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode getVersionCode()
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        resValue "string", "google_maps_key", (customProps.getProperty("GOOGLE_MAPS_API_KEY") ?: "")
        archivesBaseName = "zmuzik.taibike-v$versionName"
    }

    dexOptions {
        maxProcessCount 4
        //preDexLibraries false
        javaMaxHeapSize "8g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    signingConfigs {
        release {
            storeFile file("../../secrets/zmuzik.keystore")
            keyAlias customProps.KEY_ALIAS
            storePassword customProps.STORE_PASSWORD
            keyPassword customProps.KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

androidExtensions {
    experimental = true
}

ext {
    supportLibVersion = "27.1.1"
    koinVersion = "0.9.2"
    archComponentsVersion = "1.0.0"
    playServicesVersion = "15.0.1"
    leakcanaryVersion = "1.5.4"
    okHttpVersion = "3.9.1"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"

    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    implementation "org.koin:koin-android-architecture:$koinVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5"

    implementation "android.arch.lifecycle:runtime:$archComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$archComponentsVersion"
    kapt "android.arch.lifecycle:compiler:$archComponentsVersion"

    implementation 'com.jakewharton.timber:timber:4.5.1'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
